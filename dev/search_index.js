var documenterSearchIndex = {"docs":
[{"location":"","page":"DynamicExpressions.jl","title":"DynamicExpressions.jl","text":"<div align=\"center\">","category":"page"},{"location":"#DynamicExpressions.jl","page":"DynamicExpressions.jl","title":"DynamicExpressions.jl","text":"","category":"section"},{"location":"","page":"DynamicExpressions.jl","title":"DynamicExpressions.jl","text":"Blazingly-fast dynamic expressions.","category":"page"},{"location":"","page":"DynamicExpressions.jl","title":"DynamicExpressions.jl","text":"</div>","category":"page"},{"location":"","page":"DynamicExpressions.jl","title":"DynamicExpressions.jl","text":"DynamicExpressions.jl is the backbone of  SymbolicRegression.jl and PySR.","category":"page"},{"location":"","page":"DynamicExpressions.jl","title":"DynamicExpressions.jl","text":"Example:","category":"page"},{"location":"","page":"DynamicExpressions.jl","title":"DynamicExpressions.jl","text":"using DynamicExpressions\n\noperators = OperatorEnum(; binary_operators=[+, -, *], unary_operators=[cos])\n\nx1 = Node(; feature=1)\nx2 = Node(; feature=2)\n\nexpression = x1 * cos(x2 - 3.2)\n\nX = randn(Float64, 2, 1000);\neval_tree_array(expression, X, operators)","category":"page"},{"location":"","page":"DynamicExpressions.jl","title":"DynamicExpressions.jl","text":"This evaluation is extremely fast, without needing to compile the expression!","category":"page"},{"location":"#Contents","page":"DynamicExpressions.jl","title":"Contents","text":"","category":"section"},{"location":"","page":"DynamicExpressions.jl","title":"DynamicExpressions.jl","text":"Pages = [\"types.md\", \"eval.md\"]","category":"page"}]
}
